# ------------------------------------------------------------------------------
# QUERY AND MUTATION TYPES
# ------------------------------------------------------------------------------
extend type Query {
  getTasks: [Task]
  getTaskUsers(taskId: ID!): [TaskUser]
}

type Task {
  id: ID!
  name: ID!
  users: [User]
  userTaskInfo: UserTaskInfo
  createdAt: GraphQLDateTime
  updatedAt: GraphQLDateTime
}

# ------------------------------------------------------------------------------
# TYPES
# ------------------------------------------------------------------------------

type TaskUser{
  id: ID!
  username: String,
  isPublic: Boolean
}

# ------------------------------------------------------------------------------
# INPUTS
# ------------------------------------------------------------------------------

input TaskInput{
  userId: ID
  name: String!
  description: String
  isPublic: Boolean
  foregroundColor: HexColorCode
  backgroundColor: HexColorCode
}

input TagTaskInput{
  userTagId: ID!
  taskId: ID!
}

input RenameTaskInput{
  userTaskId: ID!
  name: String!
}

input UpdateTaskInput{
  userTaskId: ID!
  description: String
  isPublic: Boolean
  isArchived: Boolean
  foregroundColor: HexColorCode
  backgroundColor: HexColorCode
  createdAt: GraphQLDateTime
  updatedat: GraphQLDateTime
}

input DeleteTaskInput{
  userId: ID
  userTaskId: ID!
}

input CreateTaskHistoryInput{
  userTaskId: ID!
  eventId: ID
  eventColorId: String
  startTime: GraphQLDateTime!
  endTime: GraphQLDateTime
}

input UpdateTaskHistoryInput{
  id: ID!
  userTaskId: ID!
  eventColorId: String
  startTime: GraphQLDateTime!
  endTime: GraphQLDateTime!
}

input DeleteTaskHistoryInput{
  id: ID!
  userId: ID
}