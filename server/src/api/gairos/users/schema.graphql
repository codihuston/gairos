# Note: at least one type Query{} must be initialized somewhere in order
# for the typedefs to form a valid graphql schema
type Query {
  hello: String
  me: User
  getUserTags(userId: ID!): [UserTag]
  getUserTasks(userId: ID!): [Task]
  getUserTaskHistory(userId: ID!): [UserTaskHistory]
}

type Mutation {
  createUser(id: ID!, username: String):User
}

type User {
  id: ID!
  googleId: ID!
  username: String!
  email: String,
  isFirstSetupCompleted: Boolean,
  calendarId: ID
  tasks: [Task]
  tags: [Tag]
}

type UserTaskInfo{
  id: ID!
  name: String!
  description: String
  isPublic: Boolean
  createdAt: String
  updatedAt: String
}

type UserTaskHistory{
  userId: ID!
  taskId: ID!
  name: String!
  description: String!
  googleEventId: String
  startTime: String
  endTime: String
  createdAt: String
  updatedAt: String
}

type UserTag{
  userTagId: ID!
  userId: ID!
  tagId: ID!
  description: String
  isPublic: Boolean
  tag: Tag
  userTaskTags: [UserTaskTags]
  createdAt: String
  updatedAt: String
}

type UserTaskTags{
  id: ID!
  userTagId: ID!
  createdAt: String
  updatedAt: String
  task: Task
}